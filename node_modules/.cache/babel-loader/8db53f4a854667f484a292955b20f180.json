{"ast":null,"code":"var _jsxFileName = \"/home/kali/test3/crycru/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport AppRouter from './routers/AppRouter';\nimport configureStore from './store/configureStore';\nimport { setCoins } from './actions/coins';\nimport { setFavorites } from './actions/favorites';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/styles.scss';\nconst store = configureStore(); // populate favorites list\n\nconst favorites = JSON.parse(localStorage.getItem('cryptodashFavorites'));\n\nif (favorites) {\n  store.dispatch(setFavorites(favorites));\n} // populate coin list\n\n\nconst cc = require('cryptocompare');\n\ncc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY);\nlet coins = [];\nlet coinKeys = [];\ncc.coinList().then(coinList => {\n  coinKeys = Object.keys(coinList.Data);\n\n  for (let i = 0; i < coinKeys.length; i++) {\n    const coin = {\n      'symbol': coinList.Data[coinKeys[i]].Symbol,\n      'name': coinList.Data[coinKeys[i]].CoinName,\n      'sortOrder': coinList.Data[coinKeys[i]].SortOrder,\n      'imageUrl': coinList.Data[coinKeys[i]].ImageUrl,\n      'isTrading': coinList.Data[coinKeys[i]].IsTrading,\n      'price': 0,\n      'changePctDay': 0,\n      'mktCap': 0\n    };\n    coins.push(coin);\n  }\n\n  store.dispatch(setCoins(coins)); // const processedData = fetchPrices([], [], coinKeys, coins, 'USD', 200, (processedData) => {\n  //   // if (coins) { dispatch({ type: 'POPULATE_COINS', coins: processedData }) }\n  //   console.log('processed', processedData)\n  // })\n}).catch(console.error);\nconst jsx = /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(AppRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }\n})));\nReactDOM.render(jsx, document.getElementById('root'));\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/kali/test3/crycru/src/index.js"],"names":["React","ReactDOM","Provider","AppRouter","configureStore","setCoins","setFavorites","serviceWorker","store","favorites","JSON","parse","localStorage","getItem","dispatch","cc","require","setApiKey","process","env","REACT_APP_CRYPTO_COMPARE_API_KEY","coins","coinKeys","coinList","then","Object","keys","Data","i","length","coin","Symbol","CoinName","SortOrder","ImageUrl","IsTrading","push","catch","console","error","jsx","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,sBAAP;AAEA,MAAMC,KAAK,GAAGJ,cAAc,EAA5B,C,CAEA;;AACA,MAAMK,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAX,CAAlB;;AACA,IAAGJ,SAAH,EAAc;AACZD,EAAAA,KAAK,CAACM,QAAN,CAAeR,YAAY,CAACG,SAAD,CAA3B;AACD,C,CAED;;;AACA,MAAMM,EAAE,GAAGC,OAAO,CAAC,eAAD,CAAlB;;AACAD,EAAE,CAACE,SAAH,CAAaC,OAAO,CAACC,GAAR,CAAYC,gCAAzB;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,QAAQ,GAAG,EAAf;AACAP,EAAE,CAACQ,QAAH,GAAcC,IAAd,CAAoBD,QAAD,IAAc;AAC/BD,EAAAA,QAAQ,GAAGG,MAAM,CAACC,IAAP,CAAYH,QAAQ,CAACI,IAArB,CAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,QAAQ,CAACO,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAME,IAAI,GAAG;AACX,gBAAUP,QAAQ,CAACI,IAAT,CAAcL,QAAQ,CAACM,CAAD,CAAtB,EAA2BG,MAD1B;AAEX,cAAQR,QAAQ,CAACI,IAAT,CAAcL,QAAQ,CAACM,CAAD,CAAtB,EAA2BI,QAFxB;AAGX,mBAAaT,QAAQ,CAACI,IAAT,CAAcL,QAAQ,CAACM,CAAD,CAAtB,EAA2BK,SAH7B;AAIX,kBAAYV,QAAQ,CAACI,IAAT,CAAcL,QAAQ,CAACM,CAAD,CAAtB,EAA2BM,QAJ5B;AAKX,mBAAaX,QAAQ,CAACI,IAAT,CAAcL,QAAQ,CAACM,CAAD,CAAtB,EAA2BO,SAL7B;AAMX,eAAS,CANE;AAOX,sBAAgB,CAPL;AAQX,gBAAU;AARC,KAAb;AAUAd,IAAAA,KAAK,CAACe,IAAN,CAAWN,IAAX;AACD;;AACDtB,EAAAA,KAAK,CAACM,QAAN,CAAeT,QAAQ,CAACgB,KAAD,CAAvB,EAf+B,CAgB/B;AACA;AACA;AACA;AACD,CApBD,EAoBGgB,KApBH,CAoBSC,OAAO,CAACC,KApBjB;AAsBA,MAAMC,GAAG,gBACP,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEhC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CADF;AAQAP,QAAQ,CAACwC,MAAT,CAAgBD,GAAhB,EAAqBE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAArB;AAEApC,aAAa,CAACqC,UAAd","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport AppRouter from './routers/AppRouter'\nimport configureStore from './store/configureStore'\nimport { setCoins } from './actions/coins'\nimport { setFavorites } from './actions/favorites'\nimport * as serviceWorker from './serviceWorker'\nimport './styles/styles.scss'\n\nconst store = configureStore()\n\n// populate favorites list\nconst favorites = JSON.parse(localStorage.getItem('cryptodashFavorites'))\nif(favorites) {\n  store.dispatch(setFavorites(favorites))\n}\n\n// populate coin list\nconst cc = require('cryptocompare')\ncc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY)\nlet coins = []\nlet coinKeys = []\ncc.coinList().then((coinList) => {\n  coinKeys = Object.keys(coinList.Data)\n  for (let i = 0; i < coinKeys.length; i++) {\n    const coin = {\n      'symbol': coinList.Data[coinKeys[i]].Symbol,\n      'name': coinList.Data[coinKeys[i]].CoinName,\n      'sortOrder': coinList.Data[coinKeys[i]].SortOrder,\n      'imageUrl': coinList.Data[coinKeys[i]].ImageUrl,\n      'isTrading': coinList.Data[coinKeys[i]].IsTrading,\n      'price': 0,\n      'changePctDay': 0,\n      'mktCap': 0\n    }\n    coins.push(coin)\n  }\n  store.dispatch(setCoins(coins))\n  // const processedData = fetchPrices([], [], coinKeys, coins, 'USD', 200, (processedData) => {\n  //   // if (coins) { dispatch({ type: 'POPULATE_COINS', coins: processedData }) }\n  //   console.log('processed', processedData)\n  // })\n}).catch(console.error)\n\nconst jsx = (\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  </React.StrictMode>\n)\n\nReactDOM.render(jsx, document.getElementById('root'));\n\nserviceWorker.unregister()\n"]},"metadata":{},"sourceType":"module"}