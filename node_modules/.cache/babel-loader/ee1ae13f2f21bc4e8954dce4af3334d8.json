{"ast":null,"code":"var _jsxFileName = \"/home/kali/proCry/CryCru/src/components/DashboardPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\nimport { FaCircleNotch, FaBitcoin, FaSync, FaCaretUp, FaCaretDown, FaCaretLeft } from 'react-icons/fa';\nimport { setCoins, editCoin } from '../actions/coins';\nimport { setFavorites } from '../actions/favorites';\nimport { updatePriceInfo } from '../actions/price-info';\nimport { history } from '../routers/AppRouter';\nimport CoinChart from './CoinChart';\nimport CoinDetails from './CoinDetails';\nimport CoinNews from './CoinNews';\nimport { formatNumber } from '../utilities/numbers';\n\nconst cc = require('cryptocompare');\n\ncc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY); // this.props.editCoin('BTCD', { price: 123.45 })\n\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      if (this.props.favorites.length === 0) {\n        history.push('/settings');\n      } else {\n        let currentFavorite = '';\n\n        if (localStorage.getItem('cryptodashCurrentFavorite')) {\n          currentFavorite = localStorage.getItem('cryptodashCurrentFavorite');\n        } else {\n          currentFavorite = this.props.favorites[0];\n          localStorage.setItem('cryptodashCurrentFavorite', currentFavorite);\n        }\n\n        this.setState(() => ({\n          currentFavorite\n        }));\n      }\n    };\n\n    this.componentDidUpdate = () => {\n      if (this.props.coins.length > 0 && !this.props.priceInfo.faves) {\n        this.handleUpdatePrices();\n      }\n    };\n\n    this.componentWillUnmount = () => {\n      clearTimeout(this.timer);\n    };\n\n    this.handleUpdatePrices = () => {\n      this.updatePrices();\n      this.props.updatePriceInfo({\n        faves: true,\n        favesLastUpdated: moment().valueOf()\n      });\n    };\n\n    this.updatePrices = () => {\n      const currency = 'USD';\n      const favoriteSymbols = this.props.coins.filter(coin => this.props.favorites.includes(coin.symbol)).map(coin => coin.symbol);\n      document.getElementById('refresh-prices-icon').classList.add('fa-spin');\n      cc.priceFull(favoriteSymbols, [currency]).then(prices => {\n        Object.keys(prices).forEach(i => {\n          const self = this;\n          this.timer = setTimeout(function () {\n            self.props.editCoin(i, {\n              priceFetched: true,\n              price: prices[i][currency].PRICE,\n              changeDay: prices[i][currency].CHANGEDAY,\n              changePctDay: prices[i][currency].CHANGEPCTDAY,\n              mktCap: prices[i][currency].MKTCAP,\n              totalVol24hr: prices[i][currency].VOLUMEDAY,\n              supply: prices[i][currency].SUPPLY,\n              high24hr: prices[i][currency].HIGH24HOUR,\n              low24hr: prices[i][currency].LOW24HOUR\n            });\n            self.props.updatePriceInfo({\n              faves: true,\n              favesLastUpdated: moment().valueOf()\n            });\n            document.getElementById('refresh-prices-icon').classList.remove('fa-spin');\n          }, 300);\n        });\n      }).catch(console.error);\n    };\n\n    this.handleCurrentFavorite = e => {\n      const currentFavorite = e.target.id;\n      this.setState(() => ({\n        currentFavorite\n      }));\n      localStorage.setItem('cryptodashCurrentFavorite', currentFavorite);\n    };\n\n    this.state = {\n      prices: [],\n      currentFavorite: null\n    };\n    this.timer = null;\n  }\n\n  render() {\n    const favoriteCoins = this.props.coins.filter(coin => this.props.favorites.includes(coin.symbol));\n    const currentCoin = favoriteCoins.filter(coin => coin.symbol === this.state.currentFavorite)[0];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"updater\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"updater__last-updated\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, \"Last Updated:\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"updater__time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }, this.props.priceInfo.favesLastUpdated && moment(this.props.priceInfo.favesLastUpdated).format('HH:mm'))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"updater__button\",\n      onClick: this.updatePrices,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FaSync, {\n      size: \"1rem\",\n      id: \"refresh-prices-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }\n    }), \"Refresh Prices\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fave-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }, favoriteCoins.length > 0 ? favoriteCoins.map(coin => {\n      let tileClass = 'fave-tile';\n\n      if (coin.symbol === this.state.currentFavorite) {\n        tileClass += ' fave-tile--currentFave';\n      }\n\n      return /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: tileClass,\n        key: coin.symbol,\n        id: coin.symbol,\n        title: \"View coin details\",\n        onClick: this.handleCurrentFavorite,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fave-tile__overview\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fave-tile__logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 23\n        }\n      }, coin.imageUrl ? /*#__PURE__*/React.createElement(\"img\", {\n        src: `http://cryptocompare.com/${coin.imageUrl}`,\n        alt: \"coin logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 27\n        }\n      }) : /*#__PURE__*/React.createElement(FaBitcoin, {\n        size: \"3.2rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fave-tile__name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }\n      }, coin.name), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"fave-tile__symbol\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 23\n        }\n      }, coin.symbol)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"fave-tile__price\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }\n      }, coin.price ? coin.changeDay > 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"green-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"light-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 29\n        }\n      }, \"$\"), coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5)), /*#__PURE__*/React.createElement(FaCaretUp, {\n        size: \"1.6rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 29\n        }\n      })) : coin.changeDay < 0 ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"red-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"light-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 31\n        }\n      }, \"$\"), coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5)), /*#__PURE__*/React.createElement(FaCaretDown, {\n        size: \"1.6rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 31\n        }\n      })) : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"light-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 31\n        }\n      }, \"$\"), coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5)), /*#__PURE__*/React.createElement(FaCaretLeft, {\n        size: \"1.6rem\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 31\n        }\n      })) : 'no data'));\n    }) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading__notificaton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 15\n      }\n    }, \"Loading coin data\", /*#__PURE__*/React.createElement(FaCircleNotch, {\n      size: \"2.4rem\",\n      className: \"fa-spin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 70\n      }\n    }))), favoriteCoins.length > 0 && this.state.currentFavorite && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"coin__chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CoinChart, {\n      symbol: this.state.currentFavorite,\n      title: favoriteCoins.filter(coin => coin.symbol === this.state.currentFavorite)[0].name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(CoinDetails, {\n      coin: currentCoin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"Recent News\"), favoriteCoins.length > 0 && /*#__PURE__*/React.createElement(CoinNews, {\n      categories: this.props.favorites,\n      showBody: true,\n      results: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 42\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  coins: state.coins,\n  favorites: state.favorites,\n  priceInfo: state.priceInfo\n});\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  setCoins: coins => dispatch(setCoins(coins)),\n  editCoin: (symbol, updates) => dispatch(editCoin(symbol, updates)),\n  setFavorites: favorites => dispatch(setFavorites(favorites)),\n  updatePriceInfo: lastUpdated => dispatch(updatePriceInfo(lastUpdated))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage);","map":{"version":3,"sources":["/home/kali/proCry/CryCru/src/components/DashboardPage.js"],"names":["React","connect","moment","FaCircleNotch","FaBitcoin","FaSync","FaCaretUp","FaCaretDown","FaCaretLeft","setCoins","editCoin","setFavorites","updatePriceInfo","history","CoinChart","CoinDetails","CoinNews","formatNumber","cc","require","setApiKey","process","env","REACT_APP_CRYPTO_COMPARE_API_KEY","DashboardPage","Component","constructor","props","componentDidMount","favorites","length","push","currentFavorite","localStorage","getItem","setItem","setState","componentDidUpdate","coins","priceInfo","faves","handleUpdatePrices","componentWillUnmount","clearTimeout","timer","updatePrices","favesLastUpdated","valueOf","currency","favoriteSymbols","filter","coin","includes","symbol","map","document","getElementById","classList","add","priceFull","then","prices","Object","keys","forEach","i","self","setTimeout","priceFetched","price","PRICE","changeDay","CHANGEDAY","changePctDay","CHANGEPCTDAY","mktCap","MKTCAP","totalVol24hr","VOLUMEDAY","supply","SUPPLY","high24hr","HIGH24HOUR","low24hr","LOW24HOUR","remove","catch","console","error","handleCurrentFavorite","e","target","id","state","render","favoriteCoins","currentCoin","format","tileClass","imageUrl","name","toFixed","mapStateToProps","mapDispatchToProps","dispatch","updates","lastUpdated"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { FaCircleNotch, FaBitcoin, FaSync, FaCaretUp, FaCaretDown, FaCaretLeft } from 'react-icons/fa'\nimport { setCoins, editCoin } from '../actions/coins'\nimport { setFavorites } from '../actions/favorites'\nimport { updatePriceInfo } from '../actions/price-info'\nimport { history } from '../routers/AppRouter'\nimport CoinChart from './CoinChart'\nimport CoinDetails from './CoinDetails'\nimport CoinNews from './CoinNews'\nimport { formatNumber } from '../utilities/numbers'\n\nconst cc = require('cryptocompare')\ncc.setApiKey(process.env.REACT_APP_CRYPTO_COMPARE_API_KEY)\n\n\n// this.props.editCoin('BTCD', { price: 123.45 })\n\nexport class DashboardPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      prices: [],\n      currentFavorite: null\n    }\n    this.timer = null\n  }\n  componentDidMount = () => {\n    if (this.props.favorites.length === 0) {\n      history.push('/settings')\n    } else {\n      let currentFavorite = ''\n      if (localStorage.getItem('cryptodashCurrentFavorite')) {\n        currentFavorite = localStorage.getItem('cryptodashCurrentFavorite')\n      } else {\n        currentFavorite = this.props.favorites[0]\n        localStorage.setItem('cryptodashCurrentFavorite', currentFavorite)\n      }\n      this.setState(() => ({ currentFavorite }))\n    }\n  }\n  componentDidUpdate = () => {\n    if(this.props.coins.length > 0 && !this.props.priceInfo.faves) {\n      this.handleUpdatePrices()\n    }\n  }\n  componentWillUnmount = () => {\n    clearTimeout(this.timer)\n  }\n  handleUpdatePrices = () => {\n    this.updatePrices()\n    this.props.updatePriceInfo({\n      faves: true,\n      favesLastUpdated: moment().valueOf()\n    })\n  }\n  updatePrices = () => {\n    const currency = 'USD';\n    const favoriteSymbols = this.props.coins.filter(coin => this.props.favorites.includes(coin.symbol)).map(coin => coin.symbol)\n    document.getElementById('refresh-prices-icon').classList.add('fa-spin')\n    cc.priceFull(favoriteSymbols, [currency]).then(prices => {\n      Object.keys(prices).forEach(i => {\n        const self = this\n        this.timer = setTimeout(function() {\n          self.props.editCoin(i, {\n            priceFetched: true,\n            price: prices[i][currency].PRICE,\n            changeDay: prices[i][currency].CHANGEDAY,\n            changePctDay: prices[i][currency].CHANGEPCTDAY,\n            mktCap: prices[i][currency].MKTCAP,\n            totalVol24hr: prices[i][currency].VOLUMEDAY,\n            supply: prices[i][currency].SUPPLY,\n            high24hr: prices[i][currency].HIGH24HOUR,\n            low24hr: prices[i][currency].LOW24HOUR\n          })\n          self.props.updatePriceInfo({\n            faves: true,\n            favesLastUpdated: moment().valueOf()\n          })\n          document.getElementById('refresh-prices-icon').classList.remove('fa-spin')\n        }, 300);\n      })\n    }).catch(console.error)\n  }\n  handleCurrentFavorite = (e) => {\n    const currentFavorite = e.target.id\n    this.setState(() => ({ currentFavorite }))\n    localStorage.setItem('cryptodashCurrentFavorite', currentFavorite)\n  }\n  render() {\n    const favoriteCoins = this.props.coins.filter(coin => this.props.favorites.includes(coin.symbol))\n    const currentCoin = favoriteCoins.filter(coin => coin.symbol === this.state.currentFavorite)[0]\n    return (\n      <div className='content-container'>\n        <div className=\"dashboard\">\n          <div className=\"updater\">\n            <div className=\"updater__last-updated\">\n              Last Updated:\n              <span className=\"updater__time\">\n                {this.props.priceInfo.favesLastUpdated && moment(this.props.priceInfo.favesLastUpdated).format('HH:mm')}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"updater__button\"\n              onClick={this.updatePrices}\n            >\n              <FaSync size=\"1rem\" id=\"refresh-prices-icon\" />Refresh Prices\n            </button>\n          </div>\n          <div className=\"fave-list\">\n            {favoriteCoins.length > 0 ? (\n              favoriteCoins.map(coin => {\n                let tileClass = 'fave-tile'\n                if (coin.symbol === this.state.currentFavorite) {\n                  tileClass += ' fave-tile--currentFave'\n                }\n                return (\n                  <button\n                    type=\"button\"\n                    className={tileClass}\n                    key={coin.symbol}\n                    id={coin.symbol}\n                    title='View coin details'\n                    onClick={this.handleCurrentFavorite}\n                  >\n                    <div className=\"fave-tile__overview\">\n                      <div className=\"fave-tile__logo\">\n                        {coin.imageUrl ? (\n                          <img src={`http://cryptocompare.com/${coin.imageUrl}`} alt=\"coin logo\" />\n                          ) : (\n                            <FaBitcoin size=\"3.2rem\" />\n                        )}\n                      </div>\n                      <span className=\"fave-tile__name\">{coin.name}</span>\n                      <span className=\"fave-tile__symbol\">{coin.symbol}</span>\n                    </div>\n                    <div className=\"fave-tile__price\">\n                      {coin.price ? (\n                        coin.changeDay > 0 ? (\n                          <span className=\"green-text\">\n                            <span className=\"light-text\">$</span>\n                            {coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5))}\n                            <FaCaretUp size=\"1.6rem\" />\n                          </span>\n                        ) : (\n                          coin.changeDay < 0 ? (\n                            <span className=\"red-text\">\n                              <span className=\"light-text\">$</span>\n                              {coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5))}\n                              <FaCaretDown size=\"1.6rem\" />\n                            </span>\n                          ) : (\n                            <span>\n                              <span className=\"light-text\">$</span>\n                              {coin.price >= .01 ? formatNumber(coin.price.toFixed(2)) : formatNumber(coin.price.toFixed(5))}\n                              <FaCaretLeft size=\"1.6rem\" />\n                            </span>\n                          )\n                        )\n                      ) : 'no data'}\n                    </div>\n                  </button>\n                )\n              }\n              )\n            ) : (\n              <div className=\"loading__notificaton\">Loading coin data<FaCircleNotch size=\"2.4rem\" className=\"fa-spin\" /></div>\n            )}\n          </div>\n          {(favoriteCoins.length > 0 && this.state.currentFavorite) && \n            <div className=\"coin__chart\">\n              <CoinChart symbol={this.state.currentFavorite} title={favoriteCoins.filter(coin => coin.symbol === this.state.currentFavorite)[0].name} />\n              <CoinDetails coin={currentCoin} />\n            </div>\n          }\n          <div>\n            <h2>Recent News</h2>\n            {favoriteCoins.length > 0 && <CoinNews categories={this.props.favorites} showBody={true} results={10} />}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  coins: state.coins,\n  favorites: state.favorites,\n  priceInfo: state.priceInfo\n})\n\nconst mapDispatchToProps = (dispatch, props) => ({\n  setCoins: (coins) => dispatch(setCoins(coins)),\n  editCoin: (symbol, updates) => dispatch(editCoin(symbol, updates)),\n  setFavorites: (favorites) => dispatch(setFavorites(favorites)),\n  updatePriceInfo: (lastUpdated) => dispatch(updatePriceInfo(lastUpdated))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardPage)\n"]},"metadata":{},"sourceType":"module"}